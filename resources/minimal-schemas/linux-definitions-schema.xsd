<?xml version="1.0" encoding="UTF-8"?>
<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:oval="http://oval.mitre.org/XMLSchema/oval-common-5"
            xmlns:oval-def="http://oval.mitre.org/XMLSchema/oval-definitions-5"
            xmlns:linux-def="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux"
            xmlns:sch="http://purl.oclc.org/dsdl/schematron"
            targetNamespace="http://oval.mitre.org/XMLSchema/oval-definitions-5#linux"
            elementFormDefault="qualified"
            version="5.11">
   <xsd:import namespace="http://oval.mitre.org/XMLSchema/oval-definitions-5"
               schemaLocation="oval-definitions-schema.xsd"/>
   <xsd:import namespace="http://oval.mitre.org/XMLSchema/oval-common-5"
               schemaLocation="oval-common-schema.xsd"/>
   <xsd:element name="dpkginfo_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="dpkginfo_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="dpkginfo_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="arch" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="epoch" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="int"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="release" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="version" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="evr" type="oval-def:EntityStateEVRStringType" minOccurs="0" maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="iflisteners_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="iflisteners_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="interface_name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="iflisteners_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="interface_name" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="protocol" type="linux-def:EntityStateProtocolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="hw_address" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="program_name" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="pid" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="user_id" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="inetlisteningservers_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="inetlisteningservers_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="protocol" type="oval-def:EntityObjectStringType"/>
                        <xsd:element name="local_address" type="oval-def:EntityObjectIPAddressStringType"/>
                        <xsd:element name="local_port" type="oval-def:EntityObjectIntType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="inetlisteningservers_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="protocol" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="local_address" type="oval-def:EntityStateIPAddressStringType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="local_port" type="oval-def:EntityStateIntType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="local_full_address" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="program_name" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="foreign_address" type="oval-def:EntityStateIPAddressStringType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="foreign_port" type="oval-def:EntityStateIntType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="foreign_full_address" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="pid" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="user_id" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="partition_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="partition_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="mount_point" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="partition_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="mount_point" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="device" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="uuid" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="fs_type" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="mount_options" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="total_space" type="oval-def:EntityStateIntType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="space_used" type="oval-def:EntityStateIntType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="space_left" type="oval-def:EntityStateIntType" minOccurs="0"
                               maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpminfo_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpminfo_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="behaviors" type="linux-def:RpmInfoBehaviors" minOccurs="0" maxOccurs="1"/>
                        <xsd:element name="name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpminfo_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="arch" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="epoch" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="int"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="release" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="version" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="evr" type="oval-def:EntityStateEVRStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="signature_keyid" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="extended_name" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="filepath" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:complexType name="RpmInfoBehaviors">
      <xsd:attribute name="filepaths" use="optional" type="xsd:boolean" default="false"/>
   </xsd:complexType>
   <xsd:element name="rpmverify_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpmverify_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="behaviors" type="linux-def:RpmVerifyBehaviors" minOccurs="0"
                                     maxOccurs="1"/>
                        <xsd:element name="name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element name="filepath" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpmverify_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="filepath" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="size_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="mode_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="md5_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="device_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="link_mismatch" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="ownership_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="group_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="mtime_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="capabilities_differ" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="configuration_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="documentation_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="ghost_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="license_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="readme_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:complexType name="RpmVerifyBehaviors">
      <xsd:attribute name="nodeps" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nodigest" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nofiles" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="noscripts" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nosignature" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nolinkto" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nomd5" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nosize" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nouser" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nogroup" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nomtime" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nomode" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nordev" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="noconfigfiles" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="noghostfiles" use="optional" type="xsd:boolean" default="false"/>
   </xsd:complexType>
   <xsd:element name="rpmverifyfile_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpmverifyfile_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="behaviors" type="linux-def:RpmVerifyFileBehaviors" minOccurs="0"
                                     maxOccurs="1"/>
                        <xsd:element name="name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element name="epoch">
                           <xsd:complexType>
                              <xsd:simpleContent>
                                 <xsd:restriction base="oval-def:EntityObjectAnySimpleType">
                                    <xsd:attribute name="datatype" use="optional" default="string">
                                       <xsd:simpleType>
                                          <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                             <xsd:enumeration value="string"/>
                                             <xsd:enumeration value="int"/>
                                          </xsd:restriction>
                                       </xsd:simpleType>
                                    </xsd:attribute>
                                 </xsd:restriction>
                              </xsd:simpleContent>
                           </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="version">
                           <xsd:complexType>
                              <xsd:simpleContent>
                                 <xsd:restriction base="oval-def:EntityObjectAnySimpleType">
                                    <xsd:attribute name="datatype" use="optional" default="string">
                                       <xsd:simpleType>
                                          <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                             <xsd:enumeration value="string"/>
                                             <xsd:enumeration value="version"/>
                                          </xsd:restriction>
                                       </xsd:simpleType>
                                    </xsd:attribute>
                                 </xsd:restriction>
                              </xsd:simpleContent>
                           </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="release">
                           <xsd:complexType>
                              <xsd:simpleContent>
                                 <xsd:restriction base="oval-def:EntityObjectAnySimpleType">
                                    <xsd:attribute name="datatype" use="optional" default="string">
                                       <xsd:simpleType>
                                          <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                             <xsd:enumeration value="string"/>
                                             <xsd:enumeration value="version"/>
                                          </xsd:restriction>
                                       </xsd:simpleType>
                                    </xsd:attribute>
                                 </xsd:restriction>
                              </xsd:simpleContent>
                           </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="arch" type="oval-def:EntityObjectStringType"/>
                        <xsd:element name="filepath" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpmverifyfile_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="epoch" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="int"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="version" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="release" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="arch" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="filepath" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="extended_name" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="size_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="mode_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="md5_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="device_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="link_mismatch" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="ownership_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="group_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="mtime_differs" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="capabilities_differ" type="linux-def:EntityStateRpmVerifyResultType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="configuration_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="documentation_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="ghost_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="license_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="readme_file" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:complexType name="RpmVerifyFileBehaviors">
      <xsd:attribute name="nolinkto" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nomd5" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nosize" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nouser" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nogroup" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nomtime" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nomode" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nordev" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="noconfigfiles" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="noghostfiles" use="optional" type="xsd:boolean" default="false"/>
   </xsd:complexType>
   <xsd:element name="rpmverifypackage_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpmverifypackage_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="behaviors" type="linux-def:RpmVerifyPackageBehaviors" minOccurs="0"
                                     maxOccurs="1"/>
                        <xsd:element name="name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element name="epoch">
                           <xsd:complexType>
                              <xsd:simpleContent>
                                 <xsd:restriction base="oval-def:EntityObjectAnySimpleType">
                                    <xsd:attribute name="datatype" use="optional" default="string">
                                       <xsd:simpleType>
                                          <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                             <xsd:enumeration value="string"/>
                                             <xsd:enumeration value="int"/>
                                          </xsd:restriction>
                                       </xsd:simpleType>
                                    </xsd:attribute>
                                 </xsd:restriction>
                              </xsd:simpleContent>
                           </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="version">
                           <xsd:complexType>
                              <xsd:simpleContent>
                                 <xsd:restriction base="oval-def:EntityObjectAnySimpleType">
                                    <xsd:attribute name="datatype" use="optional" default="string">
                                       <xsd:simpleType>
                                          <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                             <xsd:enumeration value="string"/>
                                             <xsd:enumeration value="version"/>
                                          </xsd:restriction>
                                       </xsd:simpleType>
                                    </xsd:attribute>
                                 </xsd:restriction>
                              </xsd:simpleContent>
                           </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="release">
                           <xsd:complexType>
                              <xsd:simpleContent>
                                 <xsd:restriction base="oval-def:EntityObjectAnySimpleType">
                                    <xsd:attribute name="datatype" use="optional" default="string">
                                       <xsd:simpleType>
                                          <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                             <xsd:enumeration value="string"/>
                                             <xsd:enumeration value="version"/>
                                          </xsd:restriction>
                                       </xsd:simpleType>
                                    </xsd:attribute>
                                 </xsd:restriction>
                              </xsd:simpleContent>
                           </xsd:complexType>
                        </xsd:element>
                        <xsd:element name="arch" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="rpmverifypackage_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="epoch" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="int"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="version" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="release" minOccurs="0" maxOccurs="1">
                     <xsd:complexType>
                        <xsd:simpleContent>
                           <xsd:restriction base="oval-def:EntityStateAnySimpleType">
                              <xsd:attribute name="datatype" use="optional" default="string">
                                 <xsd:simpleType>
                                    <xsd:restriction base="oval:SimpleDatatypeEnumeration">
                                       <xsd:enumeration value="string"/>
                                       <xsd:enumeration value="version"/>
                                    </xsd:restriction>
                                 </xsd:simpleType>
                              </xsd:attribute>
                           </xsd:restriction>
                        </xsd:simpleContent>
                     </xsd:complexType>
                  </xsd:element>
                  <xsd:element name="arch" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="extended_name" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="dependency_check_passed" type="oval-def:EntityStateBoolType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="digest_check_passed" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="verification_script_successful" type="oval-def:EntityStateBoolType"
                               minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="signature_check_passed" type="oval-def:EntityStateBoolType" minOccurs="0"
                               maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:complexType name="RpmVerifyPackageBehaviors">
      <xsd:attribute name="nodeps" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nodigest" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="noscripts" use="optional" type="xsd:boolean" default="false"/>
      <xsd:attribute name="nosignature" use="optional" type="xsd:boolean" default="false"/>
   </xsd:complexType>
   <xsd:element name="selinuxboolean_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="selinuxboolean_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="selinuxboolean_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0"/>
                  <xsd:element name="current_status" type="oval-def:EntityStateBoolType" minOccurs="0"/>
                  <xsd:element name="pending_status" type="oval-def:EntityStateBoolType" minOccurs="0"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="selinuxsecuritycontext_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="selinuxsecuritycontext_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="behaviors" type="linux-def:FileBehaviors" minOccurs="0"/>
                        <xsd:choice>
                           <xsd:element name="filepath" type="oval-def:EntityObjectStringType"/>
                           <xsd:sequence>
                              <xsd:element name="path" type="oval-def:EntityObjectStringType"/>
                              <xsd:element name="filename" type="oval-def:EntityObjectStringType" nillable="true"/>
                           </xsd:sequence>
                           <xsd:element name="pid" type="oval-def:EntityObjectIntType" nillable="true"/>
                        </xsd:choice>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="selinuxsecuritycontext_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="filepath" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="path" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="filename" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="pid" type="oval-def:EntityStateIntType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="user" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="role" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="type" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="low_sensitivity" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="low_category" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="high_sensitivity" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="high_category" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="rawlow_sensitivity" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="rawlow_category" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="rawhigh_sensitivity" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="rawhigh_category" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="slackwarepkginfo_test" substitutionGroup="oval-def:test">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:TestType">
               <xsd:sequence>
                  <xsd:element name="object" type="oval-def:ObjectRefType"/>
                  <xsd:element name="state" type="oval-def:StateRefType" minOccurs="0" maxOccurs="unbounded"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="slackwarepkginfo_object" substitutionGroup="oval-def:object">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:ObjectType">
               <xsd:sequence>
                  <xsd:choice>
                     <xsd:element ref="oval-def:set"/>
                     <xsd:sequence>
                        <xsd:element name="name" type="oval-def:EntityObjectStringType"/>
                        <xsd:element ref="oval-def:filter" minOccurs="0" maxOccurs="unbounded"/>
                     </xsd:sequence>
                  </xsd:choice>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:element name="slackwarepkginfo_state" substitutionGroup="oval-def:state">
      <xsd:complexType>
         <xsd:complexContent>
            <xsd:extension base="oval-def:StateType">
               <xsd:sequence>
                  <xsd:element name="name" type="oval-def:EntityStateStringType" minOccurs="0" maxOccurs="1"/>
                  <xsd:element name="version" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="architecture" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
                  <xsd:element name="revision" type="oval-def:EntityStateStringType" minOccurs="0"
                               maxOccurs="1"/>
               </xsd:sequence>
            </xsd:extension>
         </xsd:complexContent>
      </xsd:complexType>
   </xsd:element>
   <xsd:complexType name="FileBehaviors">
      <xsd:attribute name="max_depth" use="optional" default="-1">
         <xsd:simpleType>
            <xsd:restriction base="xsd:integer">
               <xsd:fractionDigits value="0"/>
               <xsd:minInclusive value="-1"/>
            </xsd:restriction>
         </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="recurse" use="optional" default="symlinks and directories">
         <xsd:simpleType>
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="directories"/>
               <xsd:enumeration value="symlinks"/>
               <xsd:enumeration value="symlinks and directories"/>
            </xsd:restriction>
         </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="recurse_direction" use="optional" default="none">
         <xsd:simpleType>
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="none"/>
               <xsd:enumeration value="up"/>
               <xsd:enumeration value="down"/>
            </xsd:restriction>
         </xsd:simpleType>
      </xsd:attribute>
      <xsd:attribute name="recurse_file_system" use="optional" default="all">
         <xsd:simpleType>
            <xsd:restriction base="xsd:string">
               <xsd:enumeration value="all"/>
               <xsd:enumeration value="local"/>
               <xsd:enumeration value="defined"/>
            </xsd:restriction>
         </xsd:simpleType>
      </xsd:attribute>
   </xsd:complexType>
   <xsd:complexType name="EntityStateRpmVerifyResultType">
      <xsd:simpleContent>
         <xsd:restriction base="oval-def:EntityStateStringType">
            <xsd:enumeration value="pass"/>
            <xsd:enumeration value="fail"/>
            <xsd:enumeration value="not performed"/>
            <xsd:enumeration value=""/>
         </xsd:restriction>
      </xsd:simpleContent>
   </xsd:complexType>
   <xsd:complexType name="EntityStateProtocolType">
      <xsd:simpleContent>
         <xsd:restriction base="oval-def:EntityStateStringType">
            <xsd:enumeration value="ETH_P_LOOP"/>
            <xsd:enumeration value="ETH_P_PUP"/>
            <xsd:enumeration value="ETH_P_PUPAT"/>
            <xsd:enumeration value="ETH_P_IP"/>
            <xsd:enumeration value="ETH_P_X25"/>
            <xsd:enumeration value="ETH_P_ARP"/>
            <xsd:enumeration value="ETH_P_BPQ"/>
            <xsd:enumeration value="ETH_P_IEEEPUP"/>
            <xsd:enumeration value="ETH_P_IEEEPUPAT"/>
            <xsd:enumeration value="ETH_P_DEC"/>
            <xsd:enumeration value="ETH_P_DNA_DL"/>
            <xsd:enumeration value="ETH_P_DNA_RC"/>
            <xsd:enumeration value="ETH_P_DNA_RT"/>
            <xsd:enumeration value="ETH_P_LAT"/>
            <xsd:enumeration value="ETH_P_DIAG"/>
            <xsd:enumeration value="ETH_P_CUST"/>
            <xsd:enumeration value="ETH_P_SCA"/>
            <xsd:enumeration value="ETH_P_RARP"/>
            <xsd:enumeration value="ETH_P_ATALK"/>
            <xsd:enumeration value="ETH_P_AARP"/>
            <xsd:enumeration value="ETH_P_8021Q"/>
            <xsd:enumeration value="ETH_P_IPX"/>
            <xsd:enumeration value="ETH_P_IPV6"/>
            <xsd:enumeration value="ETH_P_SLOW"/>
            <xsd:enumeration value="ETH_P_WCCP"/>
            <xsd:enumeration value="ETH_P_PPP_DISC"/>
            <xsd:enumeration value="ETH_P_PPP_SES"/>
            <xsd:enumeration value="ETH_P_MPLS_UC"/>
            <xsd:enumeration value="ETH_P_MPLS_MC"/>
            <xsd:enumeration value="ETH_P_ATMMPOA"/>
            <xsd:enumeration value="ETH_P_ATMFATE"/>
            <xsd:enumeration value="ETH_P_AOE"/>
            <xsd:enumeration value="ETH_P_TIPC"/>
            <xsd:enumeration value="ETH_P_802_3"/>
            <xsd:enumeration value="ETH_P_AX25"/>
            <xsd:enumeration value="ETH_P_ALL"/>
            <xsd:enumeration value="ETH_P_802_2"/>
            <xsd:enumeration value="ETH_P_SNAP"/>
            <xsd:enumeration value="ETH_P_DDCMP"/>
            <xsd:enumeration value="ETH_P_WAN_PPP"/>
            <xsd:enumeration value="ETH_P_PPP_MP"/>
            <xsd:enumeration value="ETH_P_PPPTALK"/>
            <xsd:enumeration value="ETH_P_LOCALTALK"/>
            <xsd:enumeration value="ETH_P_TR_802_2"/>
            <xsd:enumeration value="ETH_P_MOBITEX"/>
            <xsd:enumeration value="ETH_P_CONTROL"/>
            <xsd:enumeration value="ETH_P_IRDA"/>
            <xsd:enumeration value="ETH_P_ECONET"/>
            <xsd:enumeration value="ETH_P_HDLC"/>
            <xsd:enumeration value="ETH_P_ARCNET"/>
            <xsd:enumeration value=""/>
         </xsd:restriction>
      </xsd:simpleContent>
   </xsd:complexType>
</xsd:schema>